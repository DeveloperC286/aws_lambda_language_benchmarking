VERSION 0.7


COPY_CI_DATA:
    COMMAND
    COPY --dir "ci/" "./"


INSTALL_DEPENDENCIES:
    COMMAND
    COPY "go.mod" "./"
    COPY --if-exists "go.sum" "./"
    RUN go mod download


COPY_SOURCECODE:
    COMMAND
    DO +COPY_CI_DATA
    COPY --dir "src/" "./"


golang-base:
    FROM golang:1.22.1@sha256:0b55ab82ac2a54a6f8f85ec8b943b9e470c39e32c109b766bbc1b801f3fa8d3b
    WORKDIR /tmp/aws_lambda_language_benchmarking
    ENV GOPROXY=direct
    ENV CGO_ENABLED=0
    ENV GOOS=linux
    ENV GOARCH=amd64


check-go-formatting:
    FROM +golang-base
    DO +INSTALL_DEPENDENCIES
    DO +COPY_SOURCECODE
    RUN ./ci/check-go-formatting.sh


sh-formatting-base:
    FROM +golang-base
    RUN go install mvdan.cc/sh/v3/cmd/shfmt@v3.6.0
    DO +COPY_CI_DATA


check-shell-formatting:
    FROM +sh-formatting-base
    RUN ./ci/check-shell-formatting.sh


check-formatting:
    BUILD +check-go-formatting
    BUILD +check-shell-formatting


fix-go-formatting:
    FROM +golang-base
    DO +INSTALL_DEPENDENCIES
    DO +COPY_SOURCECODE
    RUN ./ci/fix-go-formatting.sh
    SAVE ARTIFACT "src/" AS LOCAL "./"


fix-shell-formatting:
    FROM +sh-formatting-base
    RUN ./ci/fix-shell-formatting.sh
    SAVE ARTIFACT "ci/" AS LOCAL "./"


fix-formatting:
    BUILD +fix-go-formatting
    BUILD +fix-shell-formatting


check-go-linting:
    FROM +golang-base
    RUN go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.57.2
    DO +INSTALL_DEPENDENCIES
    DO +COPY_SOURCECODE
    RUN ./ci/check-go-linting.sh


ubuntu-base:
    FROM ubuntu:24.04@sha256:72297848456d5d37d1262630108ab308d3e9ec7ed1c3286a32fe09856619a782
    # https://askubuntu.com/questions/462690/what-does-apt-get-fix-missing-do-and-when-is-it-useful
    RUN apt-get update --fix-missing


check-shell-linting:
    FROM +ubuntu-base
    RUN apt-get install shellcheck -y
    DO +COPY_CI_DATA
    RUN ./ci/check-shell-linting.sh


check-linting:
    BUILD +check-go-linting
    BUILD +check-shell-linting


check-modules:
    FROM +golang-base
    DO +INSTALL_DEPENDENCIES
    DO +COPY_SOURCECODE
    RUN ./ci/check-modules.sh


fix-modules:
    FROM +golang-base
    DO +INSTALL_DEPENDENCIES
    DO +COPY_SOURCECODE
    RUN ./ci/fix-modules.sh
    SAVE ARTIFACT "go.mod" AS LOCAL "./"
    SAVE ARTIFACT "go.sum" AS LOCAL "./"


compile:
    FROM +golang-base
    DO +INSTALL_DEPENDENCIES
    DO +COPY_SOURCECODE
    RUN ./ci/compile.sh
    SAVE ARTIFACT "main" AS LOCAL "./"
    SAVE ARTIFACT "go.sum" AS LOCAL "./"


unit-test:
    FROM +golang-base
    DO +INSTALL_DEPENDENCIES
    DO +COPY_SOURCECODE
    RUN ./ci/unit-test.sh
